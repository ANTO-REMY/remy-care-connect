{
  "info": {
    "_postman_id": "remy-care-connect-hybrid-auth-v3",
    "name": "RemyCareConnect API v3 - Hybrid Auth",
    "description": "Complete API collection for RemyCareConnect with hybrid authentication (JWT + Session). Includes automatic token handling, registration, OTP verification, and role-based access.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": {
      "major": 3,
      "minor": 0,
      "patch": 0
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if expired",
          "const accessToken = pm.environment.get('access_token');",
          "const refreshToken = pm.environment.get('refresh_token');",
          "const tokenExpiry = pm.environment.get('token_expiry');",
          "",
          "if (accessToken && refreshToken && tokenExpiry) {",
          "    const now = new Date().getTime();",
          "    const expiry = new Date(tokenExpiry).getTime();",
          "    ",
          "    // Refresh if token expires in next 5 minutes",
          "    if (now >= (expiry - 300000)) {",
          "        pm.sendRequest({",
          "            url: pm.environment.get('base_url') + '/api/v1/auth/refresh',",
          "            method: 'POST',",
          "            header: {",
          "                'Authorization': 'Bearer ' + refreshToken,",
          "                'Content-Type': 'application/json'",
          "            }",
          "        }, function (err, response) {",
          "            if (!err && response.code === 200) {",
          "                const jsonData = response.json();",
          "                pm.environment.set('access_token', jsonData.access_token);",
          "                const newExpiry = new Date(Date.now() + 24*60*60*1000);",
          "                pm.environment.set('token_expiry', newExpiry.toISOString());",
          "                console.log('Token refreshed automatically');",
          "            }",
          "        });",
          "    }",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5050",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "token_expiry",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• Health Check",
      "description": "System health and status endpoints",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/health",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the API server is running and healthy"
          }
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "description": "Hybrid authentication system with JWT and sessions",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('user_id', jsonData.user_id);",
                  "    pm.environment.set('otp_code', jsonData.otp_code);",
                  "    console.log('Registration successful. OTP: ' + jsonData.otp_code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_number\": \"+254700000001\",\n  \"name\": \"Jane Doe\",\n  \"pin\": \"1234\",\n  \"role\": \"mother\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new user (mother, chw, or nurse)"
          }
        },
        {
          "name": "Verify OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('OTP verification successful. You can now login.');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_number\": \"+254700000001\",\n  \"otp_code\": \"{{otp_code}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/verify-otp",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "verify-otp"]
            },
            "description": "Verify OTP code to activate account"
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('access_token', jsonData.access_token);",
                  "    pm.environment.set('refresh_token', jsonData.refresh_token);",
                  "    pm.environment.set('user_id', jsonData.user.id);",
                  "    ",
                  "    // Set token expiry (24 hours from now)",
                  "    const expiry = new Date(Date.now() + 24*60*60*1000);",
                  "    pm.environment.set('token_expiry', expiry.toISOString());",
                  "    ",
                  "    console.log('Login successful. Tokens stored automatically.');",
                  "    console.log('Access token expires at: ' + expiry.toISOString());",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_number\": \"+254700000001\",\n  \"pin\": \"1234\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with phone number and PIN. Returns JWT tokens and sets session."
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('access_token', jsonData.access_token);",
                  "    ",
                  "    // Update token expiry",
                  "    const expiry = new Date(Date.now() + 24*60*60*1000);",
                  "    pm.environment.set('token_expiry', expiry.toISOString());",
                  "    ",
                  "    console.log('Token refreshed successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{refresh_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "profile"]
            },
            "description": "Get current user profile with role-specific data"
          }
        },
        {
          "name": "Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.environment.unset('access_token');",
                  "    pm.environment.unset('refresh_token');",
                  "    pm.environment.unset('token_expiry');",
                  "    pm.environment.unset('user_id');",
                  "    console.log('Logged out successfully. Tokens cleared.');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "logout"]
            },
            "description": "Logout from current session"
          }
        },
        {
          "name": "Logout All Sessions",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/logout-all",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "logout-all"]
            },
            "description": "Logout from all other sessions (keeps current session active)"
          }
        },
        {
          "name": "Resend OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('otp_code', jsonData.otp_code);",
                  "    console.log('New OTP sent: ' + jsonData.otp_code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_number\": \"+254700000001\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/resend-otp",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "resend-otp"]
            },
            "description": "Resend OTP for unverified users"
          }
        }
      ]
    },
    {
      "name": "üë©‚Äçüë∂ Mothers",
      "description": "Mother profile management endpoints",
      "item": [
        {
          "name": "Complete Mother Profile",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"dob\": \"1995-06-15\",\n  \"due_date\": \"2025-12-01\",\n  \"location\": \"Nairobi, Kenya\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/mothers/complete-profile",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "mothers", "complete-profile"]
            },
            "description": "Complete mother profile after registration (mothers only)"
          }
        },
        {
          "name": "Get Mother Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/mothers/1",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "mothers", "1"]
            },
            "description": "Get mother profile by ID"
          }
        },
        {
          "name": "Update Mother Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"full_name\": \"Jane Smith\",\n  \"location\": \"Mombasa, Kenya\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/mothers/1",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "mothers", "1"]
            },
            "description": "Update mother profile"
          }
        }
      ]
    }
  ]
}
